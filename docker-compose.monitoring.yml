# Docker Compose Override for Enhanced Monitoring
# Use with: docker-compose -f docker-compose.yml -f docker-compose.monitoring.yml up

version: '3.8'

services:
  # Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: foliofox-node-exporter
    restart: unless-stopped
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    ports:
      - "9100:9100"
    networks:
      - foliofox-network
    security_opt:
      - no-new-privileges:true

  # cAdvisor for container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: foliofox-cadvisor
    restart: unless-stopped
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "8080:8080"
    networks:
      - foliofox-network
    devices:
      - /dev/kmsg

  # Redis Exporter
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: foliofox-redis-exporter
    restart: unless-stopped
    environment:
      REDIS_ADDR: redis:6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-changeme}
    ports:
      - "9121:9121"
    depends_on:
      - redis
    networks:
      - foliofox-network
    security_opt:
      - no-new-privileges:true

  # PostgreSQL Exporter
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: foliofox-postgres-exporter
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: postgresql://${POSTGRES_USER:-foliofox}:${POSTGRES_PASSWORD:-changeme}@postgres:5432/${POSTGRES_DB:-foliofox}?sslmode=disable
    ports:
      - "9187:9187"
    depends_on:
      - postgres
    networks:
      - foliofox-network
    security_opt:
      - no-new-privileges:true

  # Nginx Exporter for frontend metrics
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: foliofox-nginx-exporter
    restart: unless-stopped
    command:
      - -nginx.scrape-uri=http://frontend:3000/nginx_status
    ports:
      - "9113:9113"
    depends_on:
      - frontend
    networks:
      - foliofox-network
    security_opt:
      - no-new-privileges:true

  # AlertManager for alert handling
  alertmanager:
    image: prom/alertmanager:latest
    container_name: foliofox-alertmanager
    restart: unless-stopped
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    volumes:
      - ./docker/alertmanager:/etc/alertmanager:ro
      - alertmanager_data:/alertmanager
    ports:
      - "9093:9093"
    networks:
      - foliofox-network
    security_opt:
      - no-new-privileges:true

  # Loki for log aggregation
  loki:
    image: grafana/loki:latest
    container_name: foliofox-loki
    restart: unless-stopped
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./docker/loki:/etc/loki:ro
      - loki_data:/loki
    ports:
      - "3100:3100"
    networks:
      - foliofox-network
    security_opt:
      - no-new-privileges:true

  # Promtail for log collection
  promtail:
    image: grafana/promtail:latest
    container_name: foliofox-promtail
    restart: unless-stopped
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ./docker/promtail:/etc/promtail:ro
      - app_logs:/var/log/foliofox:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    networks:
      - foliofox-network
    depends_on:
      - loki
    security_opt:
      - no-new-privileges:true

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: foliofox-jaeger
    restart: unless-stopped
    environment:
      COLLECTOR_OTLP_ENABLED: true
    ports:
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "6831:6831/udp"
      - "6832:6832/udp"
    networks:
      - foliofox-network
    security_opt:
      - no-new-privileges:true

  # Uptime monitoring
  uptime-kuma:
    image: louislam/uptime-kuma:latest
    container_name: foliofox-uptime-kuma
    restart: unless-stopped
    volumes:
      - uptime_data:/app/data
    ports:
      - "3001:3001"
    networks:
      - foliofox-network
    security_opt:
      - no-new-privileges:true

# Additional volumes for monitoring services
volumes:
  alertmanager_data:
    driver: local
  loki_data:
    driver: local
  uptime_data:
    driver: local